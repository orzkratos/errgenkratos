// Code generated by protoc-gen-orzkratos-errors (errgenkratos). DO NOT EDIT.

package example3

import (
	errors "github.com/go-kratos/kratos/v2/errors"
	errgenkratos "github.com/orzkratos/errgenkratos"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// Unknown error
func IsUnknown(err error) bool {
	return errgenkratos.IsError(err, ErrorReason_UNKNOWN, 500)
}

// Unknown error
func ErrorUnknown(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(500, ErrorReason_UNKNOWN, format, args...)
}

// Internal server error
func IsInternalError(err error) bool {
	return errgenkratos.IsError(err, ErrorReason_INTERNAL_ERROR, 500)
}

// Internal server error
func ErrorInternalError(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(500, ErrorReason_INTERNAL_ERROR, format, args...)
}

// Service unavailable
func IsServiceUnavailable(err error) bool {
	return errgenkratos.IsError(err, ErrorReason_SERVICE_UNAVAILABLE, 503)
}

// Service unavailable
func ErrorServiceUnavailable(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(503, ErrorReason_SERVICE_UNAVAILABLE, format, args...)
}

// Request timeout
func IsRequestTimeout(err error) bool {
	return errgenkratos.IsError(err, ErrorReason_REQUEST_TIMEOUT, 408)
}

// Request timeout
func ErrorRequestTimeout(format string, args ...interface{}) *errors.Error {
	return errgenkratos.NewError(408, ErrorReason_REQUEST_TIMEOUT, format, args...)
}
